"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[12488],{62066:(a,n,t)=>{t.r(n),t.d(n,{assets:()=>k,contentTitle:()=>c,default:()=>v,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var i=t(74848),o=t(28453),s=t(59449);const e='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:navigation-sdk:Navigation:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="distance-">distance</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html">Double</a></div></div></div>\n',d={},c="distance",r={id:"dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/distance-",title:"distance",description:"",source:"@site/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/distance-.mdx",sourceDirName:"dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info",slug:"/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/distance-",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/distance-",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/distance-.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"avrSpeed",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/avr-speed-"},next:{title:"endCrossName",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/end-cross-name-"}},k={},l=[];function u(a){const n={h1:"h1",...(0,o.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"distance",children:"distance"}),"\n",(0,i.jsx)(s.A,{dokkaHTML:e})]})}function v(a={}){const{wrapper:n}={...(0,o.R)(),...a.components};return n?(0,i.jsx)(n,{...a,children:(0,i.jsx)(u,{...a})}):u(a)}}}]);