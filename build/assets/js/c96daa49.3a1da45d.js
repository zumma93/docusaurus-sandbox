"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[54474],{11311:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>p});var t=s(74848),a=s(28453),o=s(59449);const i='\n  \n  <div class="cover ">\n    \n    <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:eic-rest-sdk:LLM:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword">interface </span><a href="index-">OnServerConnectionListener</a></div><p class="paragraph">Listener for connect result of server</p></div></div>\n  </div>\n  <div class="tabbedcontent">\n    <div class="tabs-section" tabs-section="tabs-section"><button class="section-tab" data-active="" data-togglable="CONSTRUCTOR,TYPE,PROPERTY,FUNCTION">Members</button></div>\n    <div class="tabs-section-body">\n      <div data-togglable="FUNCTION">\n        <h2 class="">Functions</h2>\n        <div class="table"><a data-name="1448251844%2FFunctions%2F325835147" anchor-label="onConnected" id="1448251844%2FFunctions%2F325835147" data-filterable-set=":tasSdk:eic-rest-sdk:LLM:dokkaHtmlPartial/testRelease"></a>\n          <div class="table-row" data-filterable-current=":tasSdk:eic-rest-sdk:LLM:dokkaHtmlPartial/testRelease" data-filterable-set=":tasSdk:eic-rest-sdk:LLM:dokkaHtmlPartial/testRelease">\n            <div class="main-subrow keyValue ">\n              <div class=""><span class="inline-flex">\n                  <div><a href="on-connected-"><span>on</span><wbr><span><span>Connected</span></span></a></div>\n<span class="anchor-wrapper"><span class="anchor-icon" pointing-to="1448251844%2FFunctions%2F325835147"></span>\n                    <div class="copy-popup-wrapper "><span class="copy-popup-icon"></span><span>Link copied to clipboard</span></div>\n                  </span></span></div>\n              <div>\n                <div class="title">\n                  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:eic-rest-sdk:LLM:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword">abstract </span><span class="token keyword"></span><span class="token keyword">fun </span><a href="on-connected-"><span class="token function">onConnected</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span></div><div class="brief "><p class="paragraph">Called when server connected</p></div></div></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n',c={},d="OnServerConnectionListener",r={id:"dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.listener/-on-server-connection-listener/index-",title:"OnServerConnectionListener",description:"",source:"@site/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.listener/-on-server-connection-listener/index-.mdx",sourceDirName:"dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.listener/-on-server-connection-listener",slug:"/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.listener/-on-server-connection-listener/index-",permalink:"/docusaurus-sandbox/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.listener/-on-server-connection-listener/index-",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.listener/-on-server-connection-listener/index-.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"onUpdated",permalink:"/docusaurus-sandbox/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.listener/-l-l-m-data-listener/on-updated-"},next:{title:"onConnected",permalink:"/docusaurus-sandbox/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.listener/-on-server-connection-listener/on-connected-"}},l={},p=[];function k(e){const n={h1:"h1",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"onserverconnectionlistener",children:"OnServerConnectionListener"}),"\n",(0,t.jsx)(o.A,{dokkaHTML:i})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(k,{...e})}):k(e)}}}]);