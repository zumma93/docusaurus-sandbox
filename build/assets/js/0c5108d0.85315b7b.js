"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[59230],{4011:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>r,contentTitle:()=>c,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=a(74848),n=a(28453),i=a(59449);const d='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="tabbedcontent">\n    <div class="tabs-section" tabs-section="tabs-section"><button class="section-tab" data-active="" data-togglable="TYPE">Types</button></div>\n    <div class="tabs-section-body">\n      <div data-togglable="TYPE">\n        <h2 class="">Types</h2>\n        <div class="table"><a data-name="495426035%2FClasslikes%2F1222288809" anchor-label="EventListener" id="495426035%2FClasslikes%2F1222288809" data-filterable-set=":tasSdk:tts-sdk:TextToSpeech:dokkaHtmlPartial/testRelease"></a>\n          <div class="table-row" data-filterable-current=":tasSdk:tts-sdk:TextToSpeech:dokkaHtmlPartial/testRelease" data-filterable-set=":tasSdk:tts-sdk:TextToSpeech:dokkaHtmlPartial/testRelease">\n            <div class="main-subrow keyValue ">\n              <div class=""><span class="inline-flex">\n                  <div><a href="-event-listener/index-"><span>Event</span><wbr><span><span>Listener</span></span></a></div>\n<span class="anchor-wrapper"><span class="anchor-icon" pointing-to="495426035%2FClasslikes%2F1222288809"></span>\n                    <div class="copy-popup-wrapper "><span class="copy-popup-icon"></span><span>Link copied to clipboard</span></div>\n                  </span></span></div>\n              <div>\n                <div class="title">\n                  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:tts-sdk:TextToSpeech:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword">interface </span><a href="-event-listener/index-">EventListener</a></div><div class="brief "><p class="paragraph">Listener for events relating to the progress of Text-To-Speech. Use addEventListener/removeEventListener APIs for add and remove respectively.</p></div></div></div>\n                </div>\n              </div>\n            </div>\n          </div>\n<a data-name="-410053139%2FClasslikes%2F1222288809" anchor-label="OnServerConnectionListener" id="-410053139%2FClasslikes%2F1222288809" data-filterable-set=":tasSdk:tts-sdk:TextToSpeech:dokkaHtmlPartial/testRelease"></a>\n          <div class="table-row" data-filterable-current=":tasSdk:tts-sdk:TextToSpeech:dokkaHtmlPartial/testRelease" data-filterable-set=":tasSdk:tts-sdk:TextToSpeech:dokkaHtmlPartial/testRelease">\n            <div class="main-subrow keyValue ">\n              <div class=""><span class="inline-flex">\n                  <div><a href="-on-server-connection-listener/index-"><span>On</span><wbr><span>Server</span><wbr><span>Connection</span><wbr><span><span>Listener</span></span></a></div>\n<span class="anchor-wrapper"><span class="anchor-icon" pointing-to="-410053139%2FClasslikes%2F1222288809"></span>\n                    <div class="copy-popup-wrapper "><span class="copy-popup-icon"></span><span>Link copied to clipboard</span></div>\n                  </span></span></div>\n              <div>\n                <div class="title">\n                  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:tts-sdk:TextToSpeech:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword">interface </span><a href="-on-server-connection-listener/index-">OnServerConnectionListener</a></div><div class="brief "><p class="paragraph">Listener for connect result of eic server</p></div></div></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n',o={},c="Package-level declarations",l={id:"dokka/tts-sdk/TextToSpeech/ai.umos.connect.tts.listener/index-",title:"Package-level declarations",description:"",source:"@site/docs/dokka/tts-sdk/TextToSpeech/ai.umos.connect.tts.listener/index-.mdx",sourceDirName:"dokka/tts-sdk/TextToSpeech/ai.umos.connect.tts.listener",slug:"/dokka/tts-sdk/TextToSpeech/ai.umos.connect.tts.listener/index-",permalink:"/docusaurus-sandbox/docs/dokka/tts-sdk/TextToSpeech/ai.umos.connect.tts.listener/index-",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dokka/tts-sdk/TextToSpeech/ai.umos.connect.tts.listener/index-.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"onConnected",permalink:"/docusaurus-sandbox/docs/dokka/tts-sdk/TextToSpeech/ai.umos.connect.tts.listener/-on-server-connection-listener/on-connected-"},next:{title:"Vehicle",permalink:"/docusaurus-sandbox/docs/dokka/vehicle-sdk/Vehicle/ai.umos.connect.vehicle/-vehicle/-vehicle-"}},r={},p=[];function v(e){const s={h1:"h1",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"package-level-declarations",children:"Package-level declarations"}),"\n",(0,t.jsx)(i.A,{dokkaHTML:d})]})}function k(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(v,{...e})}):v(e)}}}]);