"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7755],{72092:(t,s,e)=>{e.r(s),e.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>u});var a=e(74848),n=e(28453),o=e(59449);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:eic-rest-sdk:LLM:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="status-">status</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a></div></div></div>\n',c={},r="status",d={id:"dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.context.navigation/-ev-charger-info/status-",title:"status",description:"",source:"@site/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.context.navigation/-ev-charger-info/status-.mdx",sourceDirName:"dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.context.navigation/-ev-charger-info",slug:"/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.context.navigation/-ev-charger-info/status-",permalink:"/docusaurus-sandbox/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.context.navigation/-ev-charger-info/status-",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.context.navigation/-ev-charger-info/status-.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"stationId",permalink:"/docusaurus-sandbox/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.context.navigation/-ev-charger-info/station-id-"},next:{title:"type",permalink:"/docusaurus-sandbox/docs/dokka/eic-rest-sdk/LLM/ai.umos.connect.llm.context.navigation/-ev-charger-info/type-"}},l={},u=[];function k(t){const s={h1:"h1",...(0,n.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{id:"status",children:"status"}),"\n",(0,a.jsx)(o.A,{dokkaHTML:i})]})}function m(t={}){const{wrapper:s}={...(0,n.R)(),...t.components};return s?(0,a.jsx)(s,{...t,children:(0,a.jsx)(k,{...t})}):k(t)}}}]);