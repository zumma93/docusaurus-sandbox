"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1696],{9574:(a,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>c,default:()=>l,frontMatter:()=>d,metadata:()=>r,toc:()=>k});var o=t(74848),i=t(28453),e=t(59449);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:navigation-sdk:Navigation:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="avr-speed-">avrSpeed</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html">Double</a></div></div></div>\n',d={},c="avrSpeed",r={id:"dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/avr-speed-",title:"avrSpeed",description:"",source:"@site/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/avr-speed-.mdx",sourceDirName:"dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info",slug:"/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/avr-speed-",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/avr-speed-",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/avr-speed-.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TrafficCongestionInfo",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/-traffic-congestion-info-"},next:{title:"distance",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/distance-"}},v={},k=[];function f(a){const n={h1:"h1",...(0,i.R)(),...a.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"avrspeed",children:"avrSpeed"}),"\n",(0,o.jsx)(e.A,{dokkaHTML:s})]})}function l(a={}){const{wrapper:n}={...(0,i.R)(),...a.components};return n?(0,o.jsx)(n,{...a,children:(0,o.jsx)(f,{...a})}):f(a)}}}]);