"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[39903],{90137:(a,t,e)=>{e.r(t),e.d(t,{assets:()=>v,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>c,toc:()=>p});var n=e(74848),o=e(28453),i=e(59449);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:navi-provider-sdk:NaviProvider:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="type-">type</a><span class="token operator">: </span><a href="../../ai.umos.connect.navi.constants/-turn-type/index-">TurnType</a></div></div></div>\n',d={},r="type",c={id:"dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-t-b-t-info/type-",title:"type",description:"",source:"@site/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-t-b-t-info/type-.mdx",sourceDirName:"dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-t-b-t-info",slug:"/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-t-b-t-info/type-",permalink:"/docusaurus-sandbox/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-t-b-t-info/type-",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-t-b-t-info/type-.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TBTInfo",permalink:"/docusaurus-sandbox/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-t-b-t-info/index-"},next:{title:"TrafficCongestionInfo",permalink:"/docusaurus-sandbox/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info/-traffic-congestion-info-"}},v={},p=[];function k(a){const t={h1:"h1",...(0,o.R)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"type",children:"type"}),"\n",(0,n.jsx)(i.A,{dokkaHTML:s})]})}function u(a={}){const{wrapper:t}={...(0,o.R)(),...a.components};return t?(0,n.jsx)(t,{...a,children:(0,n.jsx)(k,{...a})}):k(a)}}}]);