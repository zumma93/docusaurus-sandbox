"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[64252],{74259:(a,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>k});var o=n(74848),i=n(28453),s=n(59449);const e='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:navigation-sdk:Navigation:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="offset-">offset</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html">Double</a></div></div></div>\n',d={},c="offset",r={id:"dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/offset-",title:"offset",description:"",source:"@site/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/offset-.mdx",sourceDirName:"dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info",slug:"/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/offset-",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/offset-",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/offset-.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TrafficCongestionInfo",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/index-"},next:{title:"roadName",permalink:"/docusaurus-sandbox/docs/dokka/navigation-sdk/Navigation/ai.umos.connect.navi.data/-traffic-congestion-info/road-name-"}},f={},k=[];function l(a){const t={h1:"h1",...(0,i.R)(),...a.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"offset",children:"offset"}),"\n",(0,o.jsx)(s.A,{dokkaHTML:e})]})}function u(a={}){const{wrapper:t}={...(0,i.R)(),...a.components};return t?(0,o.jsx)(t,{...a,children:(0,o.jsx)(l,{...a})}):l(a)}}}]);