"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4183],{22810:(a,o,e)=>{e.r(o),e.d(o,{assets:()=>f,contentTitle:()=>r,default:()=>l,frontMatter:()=>d,metadata:()=>c,toc:()=>v});var t=e(74848),i=e(28453),n=e(59449);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":tasSdk:navi-provider-sdk:NaviProvider:dokkaHtmlPartial/testRelease"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="offset-">offset</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html">Double</a></div></div></div>\n',d={},r="offset",c={id:"dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info/offset-",title:"offset",description:"",source:"@site/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info/offset-.mdx",sourceDirName:"dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info",slug:"/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info/offset-",permalink:"/docusaurus-sandbox/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info/offset-",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info/offset-.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TrafficCongestionInfo",permalink:"/docusaurus-sandbox/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info/index-"},next:{title:"roadName",permalink:"/docusaurus-sandbox/docs/dokka/navi-provider-sdk/NaviProvider/ai.umos.connect.navi.data/-traffic-congestion-info/road-name-"}},f={},v=[];function k(a){const o={h1:"h1",...(0,i.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"offset",children:"offset"}),"\n",(0,t.jsx)(n.A,{dokkaHTML:s})]})}function l(a={}){const{wrapper:o}={...(0,i.R)(),...a.components};return o?(0,t.jsx)(o,{...a,children:(0,t.jsx)(k,{...a})}):k(a)}}}]);